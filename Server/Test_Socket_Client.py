import socket 
import threading
import numpy
import pickle

import OPi.GPIO 

#pip install --upgrade https://github.com/Fionnoch/OPi.GPIO.git
#sudo python3 setup.py install

wait_time = 1e-2

ir_keys_dict = { # in nanosecs
    'right': numpy.array([0.004273, 0.004527, 0.000435, 0.001788, 0.000553, 0.001568, 0.000650, 0.001661, 0.000498, 0.000498, 0.000651, 0.000486, 0.000564, 0.000620, 0.000599, 0.000496, 0.000490, 0.000487, 0.000694, 0.001671, 0.000442, 0.001704, 0.000644, 0.001608, 0.000577, 0.000570, 0.000493, 0.000566, 0.000567, 0.000518, 0.000588, 0.000491, 0.000646, 0.000565, 0.000484, 0.000487, 0.000733, 0.001488, 0.000646, 0.000484, 0.000565, 0.000604, 0.000535, 0.000579, 0.000566, 0.001605, 0.000673, 0.001552, 0.000568, 0.000566, 0.000565, 0.001646, 0.000566, 0.000483, 0.000644, 0.001573, 0.000752, 0.001458, 0.000726, 0.001658, 0.000499, 0.000496, 0.000647, 0.000484, 0.000565, 0.001636, 0.000581]) 
    , 'left' : numpy.array([0.004381, 0.004456, 0.000502, 0.001620, 0.000570, 0.001685, 0.000605, 0.001628, 0.000533, 0.000601, 0.000520, 0.000524, 0.000587, 0.000568, 0.000491, 0.000566, 0.000607, 0.000514, 0.000587, 0.001682, 0.000514, 0.001677, 0.000520, 0.001691, 0.000519, 0.000582, 0.000586, 0.000590, 0.000493, 0.000486, 0.000649, 0.000579, 0.000502, 0.000519, 0.000509, 0.001704, 0.000591, 0.000488, 0.000716, 0.001613, 0.000573, 0.000520, 0.000520, 0.000603, 0.000497, 0.001645, 0.000623, 0.001688, 0.000506, 0.000489, 0.000567, 0.000643, 0.000523, 0.001666, 0.000576, 0.000491, 0.000567, 0.001599, 0.000679, 0.001665, 0.000439, 0.000667, 0.000509, 0.000504, 0.000581, 0.001731, 0.000496])
    , 'exit':  numpy.array([0.004383, 0.004593, 0.000486, 0.001635, 0.000487, 0.001646, 0.000673, 0.001685, 0.000485, 0.000515, 0.000626, 0.000412, 0.000731, 0.000481, 0.000486, 0.000638, 0.000596, 0.000499, 0.000509, 0.001728, 0.000500, 0.001665, 0.000569, 0.001675, 0.000502, 0.000604, 0.000670, 0.000485, 0.000487, 0.000664, 0.000557, 0.000446, 0.000531, 0.000612, 0.000504, 0.001715, 0.000587, 0.000544, 0.000524, 0.001671, 0.000637, 0.001564, 0.000644, 0.000514, 0.000428, 0.001779, 0.000538, 0.000513, 0.000650, 0.000484, 0.000484, 0.000560, 0.000654, 0.001689, 0.000547, 0.000430, 0.000743, 0.000507, 0.000501, 0.001644, 0.000584, 0.000485, 0.000570, 0.001711, 0.000567, 0.001685, 0.000510])
    , 'enter' :numpy.array([0.004291, 0.004423, 0.000652, 0.001543, 0.000591, 0.001699, 0.000569, 0.001668, 0.000520, 0.000576, 0.000595, 0.000495, 0.000564, 0.000558, 0.000560, 0.000516, 0.000576, 0.000595, 0.000486, 0.001727, 0.000540, 0.001636, 0.000485, 0.001676, 0.000745, 0.000482, 0.000500, 0.000482, 0.000721, 0.000482, 0.000479, 0.000599, 0.000569, 0.000589, 0.000486, 0.000560, 0.000565, 0.000638, 0.000545, 0.000414, 0.000747, 0.001520, 0.000632, 0.000519, 0.000490, 0.001703, 0.000643, 0.001622, 0.000498, 0.000650, 0.000562, 0.001622, 0.000601, 0.001602, 0.000567, 0.001720, 0.000485, 0.000507, 0.000566, 0.001676, 0.000678, 0.000532, 0.000511, 0.000490, 0.000645, 0.001650, 0.000573]) 
    , 'return':numpy.array([0.004415, 0.004415, 0.000515, 0.001658, 0.000700, 0.001538, 0.000517, 0.001694, 0.000580, 0.000528, 0.000570, 0.000516, 0.000569, 0.000560, 0.000482, 0.000662, 0.000592, 0.000494, 0.000583, 0.001670, 0.000505, 0.001686, 0.000589, 0.001619, 0.000646, 0.000419, 0.000578, 0.000511, 0.000570, 0.000564, 0.000538, 0.000598, 0.000591, 0.000490, 0.000585, 0.000569, 0.000486, 0.000565, 0.000670, 0.000511, 0.000574, 0.001635, 0.000483, 0.001727, 0.000590, 0.000491, 0.000645, 0.001560, 0.000591, 0.000578, 0.000500, 0.001681, 0.000608, 0.001649, 0.000492, 0.001758, 0.000523, 0.000494, 0.000668, 0.000491, 0.000482, 0.001730, 0.000489, 0.000503, 0.000732, 0.001629, 0.000505])
    , 'down' : numpy.array([0.004283, 0.004550, 0.000543, 0.001578, 0.000513, 0.001692, 0.000649, 0.001594, 0.000513, 0.000588, 0.000662, 0.000485, 0.000484, 0.000617, 0.000567, 0.000519, 0.000568, 0.000509, 0.000566, 0.001751, 0.000541, 0.001657, 0.000485, 0.001736, 0.000489, 0.000604, 0.000567, 0.000562, 0.000499, 0.000485, 0.000729, 0.000488, 0.000497, 0.000496, 0.000638, 0.001626, 0.000650, 0.000479, 0.000497, 0.000642, 0.000564, 0.000503, 0.000561, 0.000659, 0.000485, 0.001689, 0.000498, 0.001710, 0.000598, 0.000490, 0.000561, 0.000511, 0.000643, 0.001634, 0.000573, 0.001625, 0.000628, 0.001652, 0.000480, 0.001717, 0.000618, 0.000522, 0.000665, 0.000479, 0.000477, 0.001691, 0.000502])
    , 'up' :   numpy.array([0.004288, 0.004426, 0.000647, 0.001535, 0.000654, 0.001583, 0.000607, 0.001568, 0.000646, 0.000572, 0.000502, 0.000524, 0.000615, 0.000494, 0.000654, 0.000489, 0.000597, 0.000466, 0.000613, 0.001711, 0.000514, 0.001665, 0.000554, 0.001641, 0.000568, 0.000521, 0.000586, 0.000543, 0.000509, 0.000579, 0.000655, 0.000484, 0.000583, 0.000415, 0.000721, 0.000511, 0.000581, 0.000489, 0.000569, 0.000487, 0.000673, 0.000543, 0.000506, 0.000489, 0.000644, 0.001623, 0.000598, 0.001611, 0.000504, 0.000730, 0.000498, 0.001597, 0.000655, 0.001596, 0.000595, 0.001588, 0.000651, 0.001574, 0.000528, 0.001732, 0.000564, 0.000562, 0.000509, 0.000509, 0.000670, 0.001537, 0.000645]) 
}

ir_keys_tolerance_dict = {
    'up' : 0.000187,
    'down' : 0.000309,
    'left' : 0.000237,
    'right' : 0.000253,
    'exit' : 0.000271,
    'enter' : 0.000235,
    'return' : 0.000246
}

ir_keys_length = {
    'up' : len(ir_keys_dict['up']),
    'down' : len(ir_keys_dict['down']),
    'left' : len(ir_keys_dict['left']),
    'right' : len(ir_keys_dict['right']),
    'exit' : len(ir_keys_dict['exit']),
    'enter' : len(ir_keys_dict['enter']),
    'return' : len(ir_keys_dict['return'])    
}

PORT = 5050
SERVER_IP = "192.168.8.190" # "192.168.0.37" # "192.168.8.164"
ADDR = (SERVER_IP, PORT)
HEADER = 10 # 64
FORMAT = 'utf-8'
DISCONNECT_MSG = "!DISCONNECT"
KILL_MSG = "!CLOSE"


client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(ADDR)
print("connected")

def send(msg):
    message = msg.encode(FORMAT)
    msg_length = len(message)
    send_length = str(msg_length).encode(FORMAT)
    send_length += b' ' * (HEADER - len(send_length))
    client.send(send_length)
    client.send(message)
    
    print(client.recv(50).decode(FORMAT))
    
def send_ir(msg):
    message = pickle.dumps(msg) #.encode(FORMAT)
    msg_length = len(message)
    send_length = str(msg_length).encode(FORMAT)
    send_length += b' ' * (HEADER - len(send_length))
    client.send(send_length)
    client.send(message)
    
    #print(pickle.loads(client.recv(msg_length)))
    
    print(client.recv(50).decode(FORMAT))        

#send("hello world")
#send("testing testing 123")

send_ir(ir_keys_dict['up'])

#send (KILL_MSG)

send (DISCONNECT_MSG)